// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: api/proto/comment.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Comment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int64                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	AuthorId      int64                  `protobuf:"varint,3,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	TopicId       int64                  `protobuf:"varint,4,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Comment) Reset() {
	*x = Comment{}
	mi := &file_api_proto_comment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_comment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_api_proto_comment_proto_rawDescGZIP(), []int{0}
}

func (x *Comment) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Comment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Comment) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

func (x *Comment) GetTopicId() int64 {
	if x != nil {
		return x.TopicId
	}
	return 0
}

func (x *Comment) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Comment) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetCommentsByTopicRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TopicId       string                 `protobuf:"bytes,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommentsByTopicRequest) Reset() {
	*x = GetCommentsByTopicRequest{}
	mi := &file_api_proto_comment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommentsByTopicRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentsByTopicRequest) ProtoMessage() {}

func (x *GetCommentsByTopicRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_comment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentsByTopicRequest.ProtoReflect.Descriptor instead.
func (*GetCommentsByTopicRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_comment_proto_rawDescGZIP(), []int{1}
}

func (x *GetCommentsByTopicRequest) GetTopicId() string {
	if x != nil {
		return x.TopicId
	}
	return ""
}

type GetCommentsByTopicResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comments      []*Comment             `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommentsByTopicResponse) Reset() {
	*x = GetCommentsByTopicResponse{}
	mi := &file_api_proto_comment_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommentsByTopicResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentsByTopicResponse) ProtoMessage() {}

func (x *GetCommentsByTopicResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_comment_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentsByTopicResponse.ProtoReflect.Descriptor instead.
func (*GetCommentsByTopicResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_comment_proto_rawDescGZIP(), []int{2}
}

func (x *GetCommentsByTopicResponse) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

type GetCommentByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     string                 `protobuf:"bytes,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommentByIDRequest) Reset() {
	*x = GetCommentByIDRequest{}
	mi := &file_api_proto_comment_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommentByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentByIDRequest) ProtoMessage() {}

func (x *GetCommentByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_comment_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentByIDRequest.ProtoReflect.Descriptor instead.
func (*GetCommentByIDRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_comment_proto_rawDescGZIP(), []int{3}
}

func (x *GetCommentByIDRequest) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

type GetCommentByIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comment       *Comment               `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCommentByIDResponse) Reset() {
	*x = GetCommentByIDResponse{}
	mi := &file_api_proto_comment_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCommentByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCommentByIDResponse) ProtoMessage() {}

func (x *GetCommentByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_comment_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCommentByIDResponse.ProtoReflect.Descriptor instead.
func (*GetCommentByIDResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_comment_proto_rawDescGZIP(), []int{4}
}

func (x *GetCommentByIDResponse) GetComment() *Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

type CreateCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TopicId       string                 `protobuf:"bytes,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	AuthorId      int64                  `protobuf:"varint,3,opt,name=author_id,json=authorId,proto3" json:"author_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCommentRequest) Reset() {
	*x = CreateCommentRequest{}
	mi := &file_api_proto_comment_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentRequest) ProtoMessage() {}

func (x *CreateCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_comment_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentRequest.ProtoReflect.Descriptor instead.
func (*CreateCommentRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_comment_proto_rawDescGZIP(), []int{5}
}

func (x *CreateCommentRequest) GetTopicId() string {
	if x != nil {
		return x.TopicId
	}
	return ""
}

func (x *CreateCommentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateCommentRequest) GetAuthorId() int64 {
	if x != nil {
		return x.AuthorId
	}
	return 0
}

type CreateCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comment       *Comment               `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCommentResponse) Reset() {
	*x = CreateCommentResponse{}
	mi := &file_api_proto_comment_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentResponse) ProtoMessage() {}

func (x *CreateCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_comment_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentResponse.ProtoReflect.Descriptor instead.
func (*CreateCommentResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_comment_proto_rawDescGZIP(), []int{6}
}

func (x *CreateCommentResponse) GetComment() *Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

type DeleteCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TopicId       string                 `protobuf:"bytes,1,opt,name=topic_id,json=topicId,proto3" json:"topic_id,omitempty"`
	CommentId     string                 `protobuf:"bytes,2,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	UserId        int64                  `protobuf:"varint,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCommentRequest) Reset() {
	*x = DeleteCommentRequest{}
	mi := &file_api_proto_comment_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentRequest) ProtoMessage() {}

func (x *DeleteCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_comment_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentRequest.ProtoReflect.Descriptor instead.
func (*DeleteCommentRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_comment_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteCommentRequest) GetTopicId() string {
	if x != nil {
		return x.TopicId
	}
	return ""
}

func (x *DeleteCommentRequest) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

func (x *DeleteCommentRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type DeleteCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCommentResponse) Reset() {
	*x = DeleteCommentResponse{}
	mi := &file_api_proto_comment_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentResponse) ProtoMessage() {}

func (x *DeleteCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_comment_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentResponse.ProtoReflect.Descriptor instead.
func (*DeleteCommentResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_comment_proto_rawDescGZIP(), []int{8}
}

type LikeCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CommentId     string                 `protobuf:"bytes,1,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LikeCommentRequest) Reset() {
	*x = LikeCommentRequest{}
	mi := &file_api_proto_comment_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LikeCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeCommentRequest) ProtoMessage() {}

func (x *LikeCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_comment_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeCommentRequest.ProtoReflect.Descriptor instead.
func (*LikeCommentRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_comment_proto_rawDescGZIP(), []int{9}
}

func (x *LikeCommentRequest) GetCommentId() string {
	if x != nil {
		return x.CommentId
	}
	return ""
}

type LikeCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LikeCommentResponse) Reset() {
	*x = LikeCommentResponse{}
	mi := &file_api_proto_comment_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LikeCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LikeCommentResponse) ProtoMessage() {}

func (x *LikeCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_comment_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LikeCommentResponse.ProtoReflect.Descriptor instead.
func (*LikeCommentResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_comment_proto_rawDescGZIP(), []int{10}
}

var File_api_proto_comment_proto protoreflect.FileDescriptor

const file_api_proto_comment_proto_rawDesc = "" +
	"\n" +
	"\x17api/proto/comment.proto\x12\x05proto\x1a\x1fgoogle/protobuf/timestamp.proto\"\xe1\x01\n" +
	"\aComment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\x03R\x02id\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12\x1b\n" +
	"\tauthor_id\x18\x03 \x01(\x03R\bauthorId\x12\x19\n" +
	"\btopic_id\x18\x04 \x01(\x03R\atopicId\x129\n" +
	"\n" +
	"created_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"6\n" +
	"\x19GetCommentsByTopicRequest\x12\x19\n" +
	"\btopic_id\x18\x01 \x01(\tR\atopicId\"H\n" +
	"\x1aGetCommentsByTopicResponse\x12*\n" +
	"\bcomments\x18\x01 \x03(\v2\x0e.proto.CommentR\bcomments\"6\n" +
	"\x15GetCommentByIDRequest\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\tR\tcommentId\"B\n" +
	"\x16GetCommentByIDResponse\x12(\n" +
	"\acomment\x18\x01 \x01(\v2\x0e.proto.CommentR\acomment\"h\n" +
	"\x14CreateCommentRequest\x12\x19\n" +
	"\btopic_id\x18\x01 \x01(\tR\atopicId\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12\x1b\n" +
	"\tauthor_id\x18\x03 \x01(\x03R\bauthorId\"A\n" +
	"\x15CreateCommentResponse\x12(\n" +
	"\acomment\x18\x01 \x01(\v2\x0e.proto.CommentR\acomment\"i\n" +
	"\x14DeleteCommentRequest\x12\x19\n" +
	"\btopic_id\x18\x01 \x01(\tR\atopicId\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x02 \x01(\tR\tcommentId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\x03R\x06userId\"\x17\n" +
	"\x15DeleteCommentResponse\"3\n" +
	"\x12LikeCommentRequest\x12\x1d\n" +
	"\n" +
	"comment_id\x18\x01 \x01(\tR\tcommentId\"\x15\n" +
	"\x13LikeCommentResponse2\x98\x03\n" +
	"\x0eCommentService\x12Y\n" +
	"\x12GetCommentsByTopic\x12 .proto.GetCommentsByTopicRequest\x1a!.proto.GetCommentsByTopicResponse\x12M\n" +
	"\x0eGetCommentByID\x12\x1c.proto.GetCommentByIDRequest\x1a\x1d.proto.GetCommentByIDResponse\x12J\n" +
	"\rCreateComment\x12\x1b.proto.CreateCommentRequest\x1a\x1c.proto.CreateCommentResponse\x12J\n" +
	"\rDeleteComment\x12\x1b.proto.DeleteCommentRequest\x1a\x1c.proto.DeleteCommentResponse\x12D\n" +
	"\vLikeComment\x12\x19.proto.LikeCommentRequest\x1a\x1a.proto.LikeCommentResponseB4Z2github.com/sout1235/forum2/forum-service/api/protob\x06proto3"

var (
	file_api_proto_comment_proto_rawDescOnce sync.Once
	file_api_proto_comment_proto_rawDescData []byte
)

func file_api_proto_comment_proto_rawDescGZIP() []byte {
	file_api_proto_comment_proto_rawDescOnce.Do(func() {
		file_api_proto_comment_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_comment_proto_rawDesc), len(file_api_proto_comment_proto_rawDesc)))
	})
	return file_api_proto_comment_proto_rawDescData
}

var file_api_proto_comment_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_api_proto_comment_proto_goTypes = []any{
	(*Comment)(nil),                    // 0: proto.Comment
	(*GetCommentsByTopicRequest)(nil),  // 1: proto.GetCommentsByTopicRequest
	(*GetCommentsByTopicResponse)(nil), // 2: proto.GetCommentsByTopicResponse
	(*GetCommentByIDRequest)(nil),      // 3: proto.GetCommentByIDRequest
	(*GetCommentByIDResponse)(nil),     // 4: proto.GetCommentByIDResponse
	(*CreateCommentRequest)(nil),       // 5: proto.CreateCommentRequest
	(*CreateCommentResponse)(nil),      // 6: proto.CreateCommentResponse
	(*DeleteCommentRequest)(nil),       // 7: proto.DeleteCommentRequest
	(*DeleteCommentResponse)(nil),      // 8: proto.DeleteCommentResponse
	(*LikeCommentRequest)(nil),         // 9: proto.LikeCommentRequest
	(*LikeCommentResponse)(nil),        // 10: proto.LikeCommentResponse
	(*timestamppb.Timestamp)(nil),      // 11: google.protobuf.Timestamp
}
var file_api_proto_comment_proto_depIdxs = []int32{
	11, // 0: proto.Comment.created_at:type_name -> google.protobuf.Timestamp
	11, // 1: proto.Comment.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 2: proto.GetCommentsByTopicResponse.comments:type_name -> proto.Comment
	0,  // 3: proto.GetCommentByIDResponse.comment:type_name -> proto.Comment
	0,  // 4: proto.CreateCommentResponse.comment:type_name -> proto.Comment
	1,  // 5: proto.CommentService.GetCommentsByTopic:input_type -> proto.GetCommentsByTopicRequest
	3,  // 6: proto.CommentService.GetCommentByID:input_type -> proto.GetCommentByIDRequest
	5,  // 7: proto.CommentService.CreateComment:input_type -> proto.CreateCommentRequest
	7,  // 8: proto.CommentService.DeleteComment:input_type -> proto.DeleteCommentRequest
	9,  // 9: proto.CommentService.LikeComment:input_type -> proto.LikeCommentRequest
	2,  // 10: proto.CommentService.GetCommentsByTopic:output_type -> proto.GetCommentsByTopicResponse
	4,  // 11: proto.CommentService.GetCommentByID:output_type -> proto.GetCommentByIDResponse
	6,  // 12: proto.CommentService.CreateComment:output_type -> proto.CreateCommentResponse
	8,  // 13: proto.CommentService.DeleteComment:output_type -> proto.DeleteCommentResponse
	10, // 14: proto.CommentService.LikeComment:output_type -> proto.LikeCommentResponse
	10, // [10:15] is the sub-list for method output_type
	5,  // [5:10] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_api_proto_comment_proto_init() }
func file_api_proto_comment_proto_init() {
	if File_api_proto_comment_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_comment_proto_rawDesc), len(file_api_proto_comment_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_comment_proto_goTypes,
		DependencyIndexes: file_api_proto_comment_proto_depIdxs,
		MessageInfos:      file_api_proto_comment_proto_msgTypes,
	}.Build()
	File_api_proto_comment_proto = out.File
	file_api_proto_comment_proto_goTypes = nil
	file_api_proto_comment_proto_depIdxs = nil
}
